name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test-courseTemplate:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Restore CustomExceptions dependencies
      run: dotnet restore ./AcademicHub.Common/AcademicHub.Common.sln
      
    - name: Build CustomExceptions
      run: dotnet build ./AcademicHub.Common/AcademicHub.Common.sln --no-restore
      
    - name: Restore CourseTemplate dependencies
      run: dotnet restore ./CourseTemplate/CourseTemplate.sln

    - name: Build CourseTemplate
      run: dotnet build ./CourseTemplate/CourseTemplate.sln --no-restore
     
      # Calculate code coverage percentage for unit tests
    - name: Calculate unit test coverage
      run: |
        dotnet test ./CourseTemplate/CourseTemplate.UnitTests/CourseTemplate.UnitTests.csproj --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

        coverage_percentage_unit=$(bash <(curl -s https://codecov.io/bash) -f ./CourseTemplate/CourseTemplate.UnitTests/coverage.opencover.xml -X gcov)

        if [ "$coverage_percentage_unit" -ne 60 ]; then
          echo "Error: Code coverage for unit tests is not 60%."
          exit 1
        fi
      shell: bash
      
      # Calculate code coverage percentage for integration tests
    - name: Calculate integration test coverage
      run: |
        dotnet test ./CourseTemplate/CourseTemplate.IntegrationTests/CourseTemplate.IntegrationTests.csproj --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

        coverage_percentage_integration=$(bash <(curl -s https://codecov.io/bash) -f ./CourseTemplate/CourseTemplate.IntegrationTests/coverage.opencover.xml -X gcov)

        if [ "$coverage_percentage_integration" -ne 60 ]; then
          echo "Error: Code coverage for integration tests is not 60%."
          exit 1
        fi
      shell: bash